#syntax=docker/dockerfile:1.7-labs
# 1. make a production build of df-client-app that will use a local server
FROM node:18-bookworm AS df-client-builder
ARG DF_CLIENT_PUBLIC_PATH=/df/file
ARG DF_API_PUBLIC_PATH=/df/file/api
ARG DF_API_PORT=8080
ARG ENABLE_EGAIN_CHAT="0"
ARG BACKEND_HOSTNAME='localhost'
ENV VITE_BACKEND_URL=//${BACKEND_HOSTNAME}${DF_API_PUBLIC_PATH:-}/

WORKDIR /build

COPY package.json package-lock.json ./
COPY js-factgraph-scala/package.json ./js-factgraph-scala/
COPY df-client-app/package.json ./df-client-app/
COPY eslint-plugin-df-rules/package.json ./eslint-plugin-df-rules/
COPY --parents packages/*/package.json .

RUN npm ci

COPY tsconfig.base.json ./
COPY js-factgraph-scala/src/ ./js-factgraph-scala/src/
COPY df-client-app/index.html \
    df-client-app/.env.development \
    df-client-app/tsconfig.json \
    df-client-app/vite.config.ts \
    ./df-client-app/
COPY df-client-app/public/ ./df-client-app/public/
COPY df-client-app/src/ ./df-client-app/src/
COPY df-client-app/all-screens/ ./df-client-app/all-screens/
COPY eslint-plugin-df-rules/tsconfig.json ./eslint-plugin-df-rules/tsconfig.json
COPY eslint-plugin-df-rules/src/ ./eslint-plugin-df-rules/src/
COPY packages/ ./packages/
COPY --from=backend /src/main/resources/tax ./df-client-app/src/fact-dictionary/generate-src/xml-src
COPY --from=backend /src/main/resources/factgraphservice/xmlFactPaths ./df-client-app/src/fact-dictionary/generate-src/
COPY --from=backend /src/main/resources/dataimportservice/mocks ./df-client-app/src/redux/slices/data-import/mocks
COPY --from=backend /src/test/resources/scenarios ./df-client-app/src/test/scenarioTests/jsonScenarios

# do a production build with the development configuration
RUN npm run build:development --base="${DF_CLIENT_PUBLIC_PATH}"

# 2. serve static build with nginx.  config here to avoid file clutter
FROM nginx:latest
ARG DF_CLIENT_PUBLIC_PATH=/df/file
COPY --from=df-client-builder /build/df-client-app/dist/ /static/${DF_CLIENT_PUBLIC_PATH}
RUN echo "events {}\n\
http {\n\
    include mime.types;\n\
    sendfile on;\n\
    server {\n\
    	listen 3000;\n\
    	autoindex off;\n\
    	server_name _;\n\
    	server_tokens off;\n\
    	root /static;\n\
    	gzip_static on;\n\
    	add_header X-Content-Type-Options nosniff;\n\
    	location ~ ${DF_CLIENT_PUBLIC_PATH}/(assets|favicon|imgs)/ {\n\
    		try_files \$uri =404;\n\
    	}\n\
    	location / {\n\
    		try_files \$uri ${DF_CLIENT_PUBLIC_PATH}/index.html;\n\
    	}\n\
    }\n\
}\n" > /etc/nginx/nginx.conf
